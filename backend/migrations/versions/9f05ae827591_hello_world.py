# Copyright (c) 2022-2023 Pablo GonzÃ¡lez Carrizo
# All rights reserved.

# pyright: reportUndefinedVariable=false, reportGeneralTypeIssues=false


"""hello world

Revision ID: 9f05ae827591
Revises:
Create Date: 2023-05-01 19:42:03.740609

"""

from alembic import op
import sqlalchemy as sa
import ormar

# revision identifiers, used by Alembic.
revision = "9f05ae827591"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "channels",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("id", ormar.fields.sqlalchemy_uuid.CHAR(36), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("title", sa.String(length=250), nullable=False),
        sa.Column("feed", sa.String(length=250), nullable=False),
        sa.Column("kind", sa.String(length=10), nullable=False),
        sa.Column("language", sa.String(length=3), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("url", sa.String(length=250), nullable=False),
        sa.Column("image", sa.String(length=500), nullable=False),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("feed", name="uc_channels_feed"),
    )
    op.create_table(
        "user",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("id", ormar.fields.sqlalchemy_uuid.CHAR(36), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("email", sa.String(length=400), nullable=False),
        sa.Column("username", sa.String(length=40), nullable=False),
        sa.Column("hashed_password", sa.String(length=65), nullable=False),
        sa.Column("admin", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("email", name="uc_user_email"),
        sa.UniqueConstraint("username", name="uc_user_username"),
    )
    op.create_table(
        "episodes",
        sa.Column("pk", sa.Integer(), nullable=False),
        sa.Column("id", ormar.fields.sqlalchemy_uuid.CHAR(36), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("channel", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(length=250), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("guid", sa.Text(), nullable=False),
        sa.Column("url", sa.Text(), nullable=False),
        sa.Column("episode", sa.Integer(), nullable=True),
        sa.Column("season", sa.Integer(), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("transcribed", sa.Boolean(), nullable=True),
        sa.Column("embeddings", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channel"],
            ["channels.pk"],
            name="fk_episodes_channels_pk_channel",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("pk"),
        sa.UniqueConstraint("url", name="uc_episodes_url"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("episodes")
    op.drop_table("user")
    op.drop_table("channels")
    # ### end Alembic commands ###
